/**
 * Accordion v0.0.1
 * @author Vu Pham
 * @homepage https://github.com/vuquangpham/boilw
 * @license MIT 2023
 */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var i in r)("object"==typeof exports?exports:t)[i]=r[i]}}(this,(()=>(()=>{"use strict";var t={r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e);const r={enabledClass:"accordion-enabled",activeClass:"active"};function i(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"")+Date.now().toString(36)+Math.random().toString(36).slice(2)}function s(t){return"string"==typeof t&&""!==t||(console.error("The trigger selector must have a value as string."),!1)}function o(t){const e=t.target;return!(!s(t.triggerSelector)||!s(t.receiverSelector))&&(e.addEventListener("click",n.bind(t)),function(t){const e=t.target.querySelectorAll(t.triggerSelector);e.forEach(((r,i)=>{const s=e[i]?.getAttribute(t.triggerAttr);if(s)return t.options.activeIndex.some((t=>t===i))?t.open(s):void t.close(s)}))}(t),!0)}function n(t){const e=t.target.closest(this.triggerSelector);if(!e)return;this.getCurrentState(e);var i;(i=this,Array.from(i.target.querySelectorAll(i.triggerSelector)).filter((t=>t.classList.contains(r.activeClass)))||[]).forEach((t=>{const e=t.getAttribute(this.triggerAttr);this.close(e,t)}));const s=e.getAttribute(this.triggerAttr);this.open(s)}function c(t,e){return{trigger:t.target.querySelector(`${t.triggerSelector}[${t.triggerAttr}="${e}"]`),receiver:t.target.querySelector(`${t.receiverSelector}[${t.receiverAttr}="${e}"]`)}}function a(t,e,r,i){t&&e&&r&&(i||(t.classList.toggle(r),e.classList.toggle(r)),"add"!==i&&"remove"!==i||(t.classList[i](r),e.classList[i](r)))}function g(t){const e=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0)??t.getBoundingClientRect().height;!function(t,e){t&&e&&Object.assign(t.style,e)}(t,{height:e+"px"})}function l(t,e){e.style.transition=`height ${t.options.duration/1e3}s ease`,e.style.overflow="hidden"}function u(t,e){t.isAnimation=!0;const{trigger:i,receiver:s}=c(t,e);a(i,s,r.activeClass,"add"),function(t,e){"0s"===getComputedStyle(e).transitionDuration&&l(t,e),e.style.display="block",e.style.height="";const r=e.getBoundingClientRect().height;e.style.height="0px",setTimeout((()=>{g(e,r)})),setTimeout((()=>{e.style.height="",t.isAnimation=!1}),t.options.duration)}(t,s)}function d(t,e){t.isAnimation=!0;const{trigger:i,receiver:s}=c(t,e);a(i,s,r.activeClass,"remove"),function(t,e){"0s"===getComputedStyle(e).transitionDuration&&l(t,e),g(e),setTimeout((()=>{g(e,0)})),setTimeout((()=>{e.style.height="",e.style.display="none",t.isAnimation=!1}),t.options.duration)}(t,s)}class h{constructor(t){this.options=t,this.target=this.options.target,this.receiverSelector=this.options.receiverSelector,this.triggerSelector=this.options.triggerSelector,this.triggerAttr=this.options.triggerAttr,this.receiverAttr=this.options.receiverAttr,this.isAnimation=!1,this.hasInitialized=o(this),this.hasInitialized&&this.target.classList.add(r.activeClass)}getCurrentState(t){let e=t;return"string"==typeof t&&(e=this.target.querySelector(`${this.triggerSelector}[${this.triggerAttr}="${t}"]`)),e.classList.contains(r.activeClass)}toggle(t){console.log("toggle")}open(t){u(this,t)}close(t){d(this,t)}destroy(){return Accordion.destroy(this)}}return window.Accordion=new class{constructor(){this.instances=[]}create(t){const e={id:i(),target:"[data-accordion]",triggerSelector:"[data-trigger]",receiverSelector:"[data-receiver]",triggerAttr:"data-trigger",receiverAttr:"data-receiver",duration:300,activeIndex:[0],...t};if(e.target=function(t){let e="Target element not found! Please use correct DOM element!";return"string"==typeof t&&(t=document.querySelector(t),e="Target string is not valid! Please use correct CSS selector!"),t||(console.error(e),!1)}(e.target),!e.target)return null;const r=new h(e);return this.instances.push(r),r}get(t){return this.instances.find((e=>e.id===t))}destroy(t){const e=e=>e.id===t.id;if(this.instances.find(e)){const t=this.instances.findIndex(e);return this.instances.splice(t,1),!0}return!1}},e})()));